#!/bin/bash

# This file is part of the Studio Fact package.
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

source "/etc/git-sandbox/config.conf"

if [ $EUID -ne 0 ]; then
  echo "This script should be run as root." > /dev/stderr
  exit 1
fi

# Show usage
usage() {
  cat <<- _EOF_
Create a new virtualhost
Example run shell: virtualhost-add -n=name -u=user -t=project

  -d, --domain   Domain prefix. Default: ${VHOST_DOMAIN_PREFIX}
  -c, --charset  Encoding site. Default: ${VHOST_ENCODING}
  -p, --port     Port vhost. Default: ${VHOST_PORT}
  -t, --type     Type vhost - sandbox or project. !Required!
  -n, --name     Name vhost. !Required!
  -u, --user     User project or sandbox. Required if type sandbox
  -h, --help     Help - show this menu.
_EOF_
  exit 1
}

VHOST_DIR="/etc/apache2/sites-available"
VHOST_DOMAIN_PREFIX="${DOMAIN}"
VHOST_ENCODING="${ENCODING_SITE}"
VHOST_PORT="80"
VHOST_SERVER_NAME=
VHOST_APACHE_LOG_DIR=
VHOST_DOCUMENT_ROOT=
VHOST_TYPE=
VHOST_NAME=
VHOST_USER=

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  usage
fi

for i in "$@"; do
  case ${i} in
    -d=*|--domain=*) VHOST_DOMAIN_PREFIX="${i#*=}" ;;
    -c=*|--charset=*) VHOST_ENCODING=$(echo "${i#*=}" | tr '[:lower:]' '[:upper:]') ;;
    -p=*|--port=*) VHOST_PORT="${i#*=}" ;;
    -t=*|--type=*) VHOST_TYPE=$(echo "${i#*=}" | awk '{print tolower($0)}') ;;
    -n=*|--name=*) VHOST_NAME="${i#*=}" ;;
    -u=*|--user=*) VHOST_USER="${i#*=}" ;;
    *) usage; exit 1 ;;
  esac
done

#
# Some character settings
#

if [ "$VHOST_ENCODING" == "UTF8" ] || [ "$VHOST_ENCODING" == "UTF-8" ]; then
  CHARACTER="DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci";
  CHARSET="utf-8";
  PHPOVERLOAD=" ";
  PHPINTERNAL=" ";
else
  CHARACTER="DEFAULT CHARACTER SET cp1251 COLLATE cp1251_general_ci";
  CHARSET="windows-1251";
  PHPOVERLOAD="php_admin_value mbstring.func_overload 0";
  PHPINTERNAL="php_admin_value mbstring.internal_encoding latin";
fi



MBSTRING_FUNC_OVERLOAD=0
MBSTRING_INTERNAL_ENCODING=
if [ "$VHOST_ENCODING" == "UTF8" ] || [ "$VHOST_ENCODING" == "UTF-8" ]; then
  MBSTRING_FUNC_OVERLOAD=2
  MBSTRING_INTERNAL_ENCODING="UTF-8"
fi

if [ -z "$VHOST_PORT" ]; then
  VHOST_PORT=80
fi

if [ "$VHOST_TYPE" == "project" ]; then
  VHOST_USER="${PROJECT_USER}"
  VHOST_APACHE_LOG_DIR="/home/${VHOST_USER}/projects/${VHOST_NAME}"
  VHOST_DOCUMENT_ROOT="/home/${VHOST_USER}/projects/${VHOST_NAME}/httpdocs"
  VHOST_REPLACE_ROOT="\/home\/$VHOST_USER\/projects\/$VHOST_NAME\/httpdocs"
elif [ "$VHOST_TYPE" == "sandbox" ]; then
  if [ -z $VHOST_USER ]; then
    echo -e "Invalid -u argument, usage --help"
    exit 1
  fi

  VHOST_APACHE_LOG_DIR="/home/${VHOST_USER}/www/${VHOST_NAME}"
  VHOST_DOCUMENT_ROOT="/home/${VHOST_USER}/www/${VHOST_NAME}/httpdocs"
  VHOST_REPLACE_ROOT="\/home\/$VHOST_USER\/www\/$VHOST_NAME\/httpdocs"
else
  echo -e "Invalid -t argument, usage --help."
  exit 1
fi

if [ ! -d ${VHOST_DOCUMENT_ROOT} ]; then
  echo -e "Path '${VHOST_DOCUMENT_ROOT}' not exists."
  exit 1
fi

# Create server name vhost
# If type project, then project.host.domain
# If type sandbox, then user.project.host.domain

VHOST_SERVER_NAME="$VHOST_NAME.$VHOST_DOMAIN_PREFIX"
if [ "$VHOST_TYPE" == "sandbox" ]; then
  VHOST_SERVER_NAME="$VHOST_USER.$VHOST_SERVER_NAME"
fi
PHPSESSIONSAVEPATH="\/tmp\/php_sessions\/$sitedir"
PHPUPLOADTMPDIR="\/tmp\/php_upload\/$sitedir"

mkdir /tmp/php_sessions/"$VHOST_SERVER_NAME"
chown -R "$VHOST_USER":"$PROJECT_GROUP" /tmp/php_sessions/"$VHOST_SERVER_NAME"
chmod -R 0770 /tmp/php_sessions/"$VHOST_SERVER_NAME"

mkdir /tmp/php_upload/"$VHOST_SERVER_NAME"
chown -R "$VHOST_USER":"$PROJECT_GROUP" /tmp/php_upload/"$VHOST_SERVER_NAME"
chmod -R 0770 /tmp/php_upload/"$VHOST_SERVER_NAME"


cp "$TEMPLATES_DIR"/"$VHOST_TYPE"/nginx/site_template.conf "$NGINX_CONF_DIR"/sandbox/site_avaliable/"$VHOST_SERVER_NAME".conf
sed -i "s/#SERVER_NAME#/$VHOST_SERVER_NAME/g" "$NGINX_CONF_DIR"/sandbox/site_avaliable/"$VHOST_SERVER_NAME".conf
sed -i "s/#SERVER_DIR#/$VHOST_REPLACE_ROOT/g" "$NGINX_CONF_DIR"/sandbox/site_avaliable/"$VHOST_SERVER_NAME".conf
sed -i "s/#SERVER_ENCODING#/$CHARSET/g" "$NGINX_CONF_DIR"/sandbox/site_avaliable/"$VHOST_SERVER_NAME".conf
ln -sf "$NGINX_CONF_DIR"/sandbox/site_avaliable/"$VHOST_SERVER_NAME".conf "$NGINX_CONF_DIR"/sandbox/site_enabled

cp "$TEMPLATES_DIR"/"$VHOST_TYPE"/httpd/site_template.conf "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#SERVER_NAME#/$VHOST_SERVER_NAME/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#SERVER_DIR#/$VHOST_REPLACE_ROOT/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#PHP_OVERLOAD#/$PHPOVERLOAD/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#PHP_INTERNAL#/$PHPINTERNAL/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#PHP_SESSIONS#/php_admin_value session.save_path $PHPSESSIONSAVEPATH/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
sed -i "s/#PHP_UPLOAD#/php_admin_value upload_tmp_dir $PHPUPLOADTMPDIR/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
if [ "$VHOST_TYPE" == "sandbox" ]; then
  sed -i "s/#USER_GROUP#/$VHOST_USER\ $PROJECT_GROUP/g" "$HTTPD_CONF_DIR"/sandbox/conf/"$VHOST_SERVER_NAME".conf
fi

service httpd restart
service nginx restart
